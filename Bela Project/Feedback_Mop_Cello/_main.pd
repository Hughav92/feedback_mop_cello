#N canvas 49 105 1787 879 12;
#X obj 188 674 output;
#X obj 360 591 pitchshifting;
#X obj 189 42 trill_init;
#X obj 226 227 acc_magnitude~;
#X obj 226 432 bowing;
#X obj 500 151 trill_input, f 78;
#X obj 189 119 adc_input, f 15;
#X text 1411 5 Patch for the FEEDBACK MOP CELLO;
#X text 1360 71 1 trill_init;
#X text 1360 91 2 trill_input;
#X text 1355 29 The following abstractions are required:;
#X text 1360 110 3 acc_magnitude~;
#X text 1360 149 5 vibrato;
#X text 1360 169 6 bowing;
#X text 1360 187 7 deltasig~;
#X text 1360 223 8 pitchshifting;
#X text 1360 242 9 pitchshifter~;
#X text 1358 277 from http://www.pdpatchrepo.info/hurleur/pitchshifter~.pd)
;
#X text 1359 293 10 scalelin;
#X text 1360 205 (from sfalib);
#X text 1359 326 11 output;
#X text 1358 407 Ensure they are included in the Bela Project!;
#X text 5 6 1 Gestural Aquisition Layer;
#X text 4 275 2 Mapping Layer;
#X text 9 532 3 Sound Synthesis Layer;
#X text 282 41 Initialises the Trill Craft and sets parameters for
capacitive sensing;
#X text 309 118 Pre-processes microphone and accelerometer input;
#X text 1058 151 Obtains input from Trill Craft sensors;
#X text 339 228 Calculates the magnitude of;
#X text 338 246 acceleration across all 3 axes;
#X text 1088 341 Maps capacitive sensor data to;
#X text 1088 355 pitch parameters;
#X text 462 584 Applies the pitchshifting parameters based upon the
bowing and capacitive sensor mappings;
#X text 243 666 Outputs the raw microphone signal and the processed
microphone signal;
#X text 125 273 ____________________________________________________________
;
#X text 546 273 ____________________________________________________________
;
#X text 210 4 ____________________________________________________________
;
#X text 631 4 ____________________________________________________________
;
#X text 1052 4 _________________________________________;
#X text 967 273 _____________________________________________________
;
#X text 184 532 ____________________________________________________________
;
#X text 605 532 ____________________________________________________________
;
#X text 1026 532 _______________________________________;
#X text 279 426 Maps the accelerometer data to parameters representing
the bowing motions;
#X obj 607 340 string_position_v2, f 67;
#X text 1359 344 12 ghost_sensor;
#X text 1359 362 13 scalesiglin~;
#X text 1359 377 (from sfalib);
#X text 1360 130 4 string_position_v2;
#X text 1335 432 General programme flow:;
#X text 1333 452 1 The gestural aquisition layer applies preprocessing
to the input microphone \, accelerometer \, and capacitive sensor signals.
The microphone is passed to the sound synthesis layer. The accelerometer
and capcitive sensor signals are passed to the mapping layer., f 62
;
#X text 1333 528 2 The mapping layer maps the capacitive sensor signals
to various pitch parameters and the accelerometer data to various audio
parameters., f 62;
#X text 1011 746 The sound of the instrument is quite heavily dependent
upon the microphone/loudspeaker combination used. There is output to
two speakers: the first outputs the raw audio from the microphone and
the second outputs the pitchshifted signal. The intention for this
was for the first loudspeaker to be used as part of the instrument
\, and the second as the speaker which is listened to by audience ect.
However \, I've found myself using the audience output to also generate
feedback using quite a sensitive and highly gained microphone. Through
the use of two sepakers this provides the opportunity to also generate
a variety of feedback pitches and tones. It's worth experimenting with
different setups \, as they provide the instrument with quite a range.
, f 108;
#X text 1013 613 Bela project settings:;
#X text 1012 725 General comments:;
#X text 1359 392 14 adc_input;
#X text 1012 634 The instrument only requires 3 analogue inputs \,
so can be run at a sample rate of 44100Hz. It runs without any dropped
blocks at a block size of 128 At 64 there is very occasionally a dropped
block (this has only occured 2 times so far \, but worth mentioning)
\, so I currently run it at 64 and this seems to be the lower boundary.
It is worth experimenting with the microphone input gain as well. Slightly
clipping the input signal provides a sound more resembling a string
instrument \, and heavily clipping it provides the instrument with
a very different feeling, f 108;
#X text 1357 261 (adaption of help patch G09.pitchshift.pd;
#X text 1358 309 (adaption from sfalib);
#X text 1333 576 3 The sound synthesis layer pitchshifts the microphone
input and mixes it with the raw microphone input for output. This then
feeds back into the gestural aquisition layer in the hardware domain.
, f 62;
#X connect 1 0 0 1;
#X connect 3 0 4 0;
#X connect 4 0 0 2;
#X connect 4 1 1 2;
#X connect 5 10 44 0;
#X connect 5 11 44 1;
#X connect 5 12 44 2;
#X connect 5 13 44 3;
#X connect 5 14 44 4;
#X connect 5 15 44 5;
#X connect 5 16 44 6;
#X connect 5 17 44 7;
#X connect 5 18 44 8;
#X connect 5 19 44 9;
#X connect 5 20 44 10;
#X connect 5 21 44 11;
#X connect 5 22 44 12;
#X connect 5 23 44 13;
#X connect 5 24 44 14;
#X connect 6 0 0 0;
#X connect 6 1 1 0;
#X connect 6 2 3 0;
#X connect 6 3 3 1;
#X connect 6 4 3 2;
#X connect 44 0 1 1;
#X connect 44 0 1 3;
